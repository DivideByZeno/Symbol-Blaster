 <Window x:Class="SymbolBlaster.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:SymbolBlaster.ViewModel"
        xmlns:game="clr-namespace:SymbolBlaster.Game"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        xmlns:converters="clr-namespace:SymbolBlaster.UI.Converters"
        mc:Ignorable="d"
         d:DesignWidth="1280"
         d:DesignHeight="720"
         Width="1280"
         Height="760"
        Title="SYMB◎L BL◭STER"
        Loaded="Window_Loaded"
        x:Name="mainWindow"
        PreviewKeyDown="Window_PreviewKeyDown"
        PreviewKeyUp="Window_PreviewKeyUp"
        SizeChanged="Window_SizeChanged"
        StateChanged="MainWindow_StateChanged"
        Background="{Binding GameViewModel.GameBackgroundBrush, Mode=OneWay, FallbackValue=Black}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SymbolBlaster;component/UI/Resources/StyleResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:MainTabPageComparisonConverter x:Key="mainTabPageComparisonConverter" />
            <converters:PresetsTabPageComparisonConverter x:Key="presetsTabPageComparisonConverter" />

            <DataTemplate x:Key="configurationPresetDataTemplate">
                <Border CornerRadius="4"
                        Margin="8,0,8,8"
                        Padding="0"
                        BorderBrush="#0088ff"
                        BorderThickness="1"
                        ClipToBounds="True">
                    <StackPanel Orientation="Vertical">
                        <Border CornerRadius="4,4,0,0"
                                VerticalAlignment="Top">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background"
                                            Value="#C9E1FF" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver, Mode=OneWay}"
                                                     Value="True">
                                            <Setter Property="Background"
                                                    Value="{StaticResource Button.MouseOver.Background1}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected, Mode=OneWay}"
                                                     Value="True">
                                            <Setter Property="Background"
                                                    Value="{StaticResource Button.Static.Background1}" />
                                            <Setter Property="TextElement.Foreground"
                                                    Value="{StaticResource whiteColorBrush}" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver, Mode=OneWay}"
                                                           Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected, Mode=OneWay}"
                                                           Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background"
                                                    Value="{StaticResource Button.MouseOver.Background1}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding ConfigurationName}"
                                           FontWeight="DemiBold"
                                           x:Name="title"
                                           Margin="8,4">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource SettingLabelText}">
                                            <Setter Property="Foreground"
                                                    Value="#222" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected, Mode=OneWay}"
                                                             Value="True">
                                                    <Setter Property="Foreground"
                                                            Value="{StaticResource whiteColorBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <Border Grid.Column="1"
                                        ToolTip="Game controls mode"
                                        Background="#220088ff"
                                        BorderThickness="0,0,0,0"
                                        BorderBrush="#88ffffff"
                                        Cursor="Help">
                                    <DockPanel Margin="4">
                                        <TextBlock FontWeight="DemiBold"
                                                   Grid.Column="1">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource SettingLabelText}">
                                                    <Setter Property="Foreground"
                                                            Value="#222" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding PlayerControlMode, Mode=OneWay}"
                                                                     Value="{x:Static game:PlayerControlMode.Retro}">
                                                            <Setter Property="Text"
                                                                    Value="🕹 Retro" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding PlayerControlMode, Mode=OneWay}"
                                                                     Value="{x:Static game:PlayerControlMode.WASD}">
                                                            <Setter Property="Text"
                                                                    Value="🕹 WASD" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected, Mode=OneWay}"
                                                                     Value="True">
                                                            <Setter Property="Foreground"
                                                                    Value="{StaticResource whiteColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DockPanel>
                                </Border>

                                <Border Grid.Column="2"
                                        ToolTip="Render Quality"
                                        Cursor="Help"
                                        BorderThickness="0,0,0,0"
                                        BorderBrush="#88ffffff"
                                        Background="#440088ff"
                                        CornerRadius="0">
                                    <TextBlock Margin="4"
                                               Grid.Column="2"
                                               FontWeight="DemiBold">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}"
                                                   BasedOn="{StaticResource SettingLabelText}">
                                                <Setter Property="Foreground"
                                                        Value="#222" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RenderQuality, Mode=OneWay}"
                                                                 Value="{x:Static EdgeMode.Unspecified}">
                                                        <Setter Property="Text"
                                                                Value="🖥 HQ" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RenderQuality, Mode=OneWay}"
                                                                 Value="{x:Static EdgeMode.Aliased}">
                                                        <Setter Property="Text"
                                                                Value="🖥 LQ" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected, Mode=OneWay}"
                                                                 Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="{StaticResource whiteColorBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Border>
                            </Grid>
                        </Border>

                        <Border CornerRadius="0,0,4,4">
                            <Border.Background>
                                <SolidColorBrush Color="{Binding GameBackground, Mode=OneWay}" />
                            </Border.Background>
                            <StackPanel Orientation="Vertical"
                                        ClipToBounds="True">
                                <StackPanel Orientation="Horizontal"
                                            Margin="4"
                                            HorizontalAlignment="Left"
                                            TextElement.FontSize="24">
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Margin"
                                                    Value="0,0,4,0" />
                                            <Setter Property="Stretch"
                                                    Value="None" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Image RenderTransformOrigin=".5,.5">
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing Geometry="{Binding PlayerGlyphGeometry}">
                                                        <GeometryDrawing.Brush>
                                                            <SolidColorBrush Color="{Binding PlayerColor}" />
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                        <Image.RenderTransform>
                                            <RotateTransform Angle="{Binding PlayerRotation}" />
                                        </Image.RenderTransform>
                                    </Image>
                                    <Image RenderTransformOrigin=".5,.5">
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing Geometry="{Binding ProjectileGlyphGeometry}">
                                                        <GeometryDrawing.Brush>
                                                            <SolidColorBrush Color="{Binding ProjectileColor}" />
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                        <Image.RenderTransform>
                                            <RotateTransform Angle="{Binding ProjectileRotation}" />
                                        </Image.RenderTransform>
                                    </Image>
                                    <Image>
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing Geometry="{Binding PlayerDebrisGlyphGeometry}">
                                                        <GeometryDrawing.Brush>
                                                            <SolidColorBrush Color="{Binding PlayerDebrisColor}" />
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                    <Image>
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing Geometry="{Binding LargeObstacleGlyphGeometry}">
                                                        <GeometryDrawing.Brush>
                                                            <SolidColorBrush Color="{Binding LargeObstacleColor}" />
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                    <Image>
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing Geometry="{Binding MediumObstacleGlyphGeometry}">
                                                        <GeometryDrawing.Brush>
                                                            <SolidColorBrush Color="{Binding MediumObstacleColor}" />
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                    <Image>
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing Geometry="{Binding SmallObstacleGlyphGeometry}">
                                                        <GeometryDrawing.Brush>
                                                            <SolidColorBrush Color="{Binding SmallObstacleColor}" />
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                    <Image>
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing Geometry="{Binding LargeEnemyGlyphGeometry}">
                                                        <GeometryDrawing.Brush>
                                                            <SolidColorBrush Color="{Binding LargeEnemyColor}" />
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                    <Image>
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing Geometry="{Binding SmallEnemyGlyphGeometry}">
                                                        <GeometryDrawing.Brush>
                                                            <SolidColorBrush Color="{Binding SmallEnemyColor}" />
                                                        </GeometryDrawing.Brush>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                </StackPanel>
                                <TextBlock Text="ABCDEF 012345"
                                           FontFamily="Consolas"
                                           FontSize="12"
                                           Margin="4,-4,0,2">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{Binding GameForeground}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="interfaceContainer">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <!--<TextBlock Text="Divide By Zeno"
                   FontSize="64"
                   Panel.ZIndex="100"
                   FontWeight="SemiBold"
                   Margin="100,-20,0,0"
                   Foreground="#180fffff"
                   HorizontalAlignment="Left"
                   IsHitTestVisible="False"
                   Grid.ColumnSpan="2" />-->
        <FrameworkElement x:Name="resetFocusElement"
                          Focusable="True"
                          FocusVisualStyle="{x:Null}" />
        <Canvas x:Name="canvas"
                Grid.ColumnSpan="2"
                IsEnabled="False"
                IsHitTestVisible="False" />

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <WrapPanel Orientation="Horizontal"
                       HorizontalAlignment="Center"
                       Grid.RowSpan="3">
                <TextBlock Text="{Binding GameViewModel.LivesRemainingString, Mode=OneWay, StringFormat='{}L:{0}', FallbackValue=🎸🎸🎸}"
                           x:Name="livesRemainingTextBlock"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Width="160"
                           Style="{StaticResource gameOverlayText}"/>
                <TextBlock Text="{Binding GameViewModel.CurrentScore, Mode=OneWay, StringFormat='{}S:{0}', FallbackValue=123}"
                           Style="{StaticResource gameOverlayText}"
                           Width="160"
                           x:Name="currentScoreTextBlock"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top" />

                <TextBlock Text="{Binding GameViewModel.HighScore, Mode=OneWay, StringFormat='{}🏆{0}', FallbackValue=🏆456}"
                           Style="{StaticResource gameOverlayText}"
                           Width="160"
                           Margin="-6,0,0,0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           x:Name="highScoreTextBlock"/>
            </WrapPanel>

            <TextBlock 
                       Grid.RowSpan="4"
                       x:Name="gameOverTextBlock"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="GAME OVER">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}"
                           BasedOn="{StaticResource gameOverlayText}">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                         Value="{x:Static viewModel:GameState.GAME_OVER}">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Grid.RowSpan="4"
                       FontSize="24"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="{Binding GameViewModel.LevelCounter, StringFormat='{}ROUND {0}', Mode=OneWay}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}"
                           BasedOn="{StaticResource gameOverlayText}">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding GameViewModel.ShowLevelCounter, Mode=OneWay}"
                                         Value="true">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <StackPanel Orientation="Vertical"
                        Margin="0,8,0,0"
                        VerticalAlignment="Center"
                        Grid.Row="2">
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                         Value="{x:Static viewModel:GameState.ENTER_NAME}">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <TextBlock x:Name="enterNameTextBlock"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}"
                               BasedOn="{StaticResource gameOverlayText}">
                            <Setter Property="Text"
                                    Value="You have scored a truly amazing amount of points.&#10;Type an alias below for the Screen Of Fame,&#10;Press Enter to confirm:" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                   Value="{x:Static viewModel:GameState.ENTER_NAME}" />
                                        <Condition Binding="{Binding GameViewModel.CurrentScore, Mode=OneWay}"
                                                   Value="0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Text"
                                            Value="You have scored ... zero points 😴&#10;Type an alias below for the Screen Of Fame,&#10;Press Enter to confirm:" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBox Width="96"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Text="{Binding GameViewModel.NameEntryString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         MaxLength="{x:Static game:GameDefs.MAX_NAME_LENGTH}"
                         Foreground="{Binding GameViewModel.GameBackgroundBrush, Mode=OneWay, FallbackValue=Black}"
                         Background="{Binding GameViewModel.GameForegroundBrush, Mode=OneWay, FallbackValue=White}"
                         CaretBrush="{Binding GameViewModel.GameBackgroundBrush, Mode=OneWay, FallbackValue=Black}"
                         FontFamily="Consolas"
                         FontSize="32"
                         FontWeight="Light"
                         TextAlignment="Center"
                         BorderThickness="0"
                         Margin="0,20,0,0"
                         IsHitTestVisible="True"
                         x:Name="nameEntryTextBox"
                         PreviewKeyDown="NameEntryTextBox_PreviewKeyDown">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                             Value="{x:Static viewModel:GameState.ENTER_NAME}">
                                    <Setter Property="FocusManager.FocusedElement"
                                            Value="{Binding ElementName=nameEntryTextBox, Mode=OneWay}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>
            <StackPanel Orientation="Vertical"
                        Grid.RowSpan="3"
                        Grid.Row="1"
                        IsEnabled="False"
                        Margin="0,8,0,0"
                        IsHitTestVisible="False">
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                         Value="{x:Static viewModel:GameState.SHOW_SCORES}">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <TextBlock Margin="0,56,0,0"
                           x:Name="pressToContinueTextBlock"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Top"
                           Text="PRESS ENTER TO START">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}"
                               BasedOn="{StaticResource gameOverlayText}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                             Value="{x:Static viewModel:GameState.SHOW_SCORES}">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="EnterNameAnimationBeginStoryboard">
                                            <StaticResource ResourceKey="EnterNameAnimation" />
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="EnterNameAnimationBeginStoryboard" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Style="{StaticResource gameOverlayText}"
                           Margin="0,16,0,0"
                           x:Name="screenOfFameTextBlock"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Top"
                           Text="{Binding GameViewModel.ScreenOfFameString, Mode=OneWay, FallbackValue='SCREEN OF FAME'}" />
            </StackPanel>
        </Grid>
        

        <ToggleButton Width="64"
                      Height="40"
                      Grid.RowSpan="3"
                      Margin="8"
                      x:Name="menuButton"
                      PreviewKeyDown="MenuButton_PreviewKeyDown"
                      BorderThickness="0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      Command="{Binding ToggleMenuVisibility, Mode=OneWay}"
                      IsChecked="{Binding IsMenuOpen, Mode=OneWay}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}"
                       BasedOn="{StaticResource RegularToggleButtonStyle}">
                </Style>
            </ToggleButton.Style>
            <ToggleButton.Tag>
                <CornerRadius>4</CornerRadius>
            </ToggleButton.Tag>
            <TextBlock Text="MENU"
                       Foreground="{StaticResource whiteColorBrush}"
                       Style="{StaticResource MenuButtonText}" />
        </ToggleButton>

        <Border Background="{StaticResource uiContainerBrush}"
                x:Name="menuContainer"
                HorizontalAlignment="Left">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Setter Property="Width"
                            Value="328" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMenuOpen, Mode=OneWay, FallbackValue=True}"
                                     Value="True">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsHelpPanelExpanded, Mode=OneWay, FallbackValue=False}"
                                     Value="True">
                            <Setter Property="Width"
                                    Value="640" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ToggleButton Width="64"
                                  Height="40"
                                  Grid.RowSpan="2"
                                  x:Name="menuButtonInMenu"
                                  PreviewKeyDown="MenuButton_PreviewKeyDown"
                                  Command="{Binding ToggleMenuVisibility, Mode=OneWay}"
                                  IsChecked="{Binding IsMenuOpen, Mode=OneWay}"
                                  Style="{StaticResource RegularToggleButtonStyle}">
                        <ToggleButton.Tag>
                            <CornerRadius>4</CornerRadius>
                        </ToggleButton.Tag>
                        <TextBlock Text="MENU"
                                   Foreground="{StaticResource whiteColorBrush}"
                                   Style="{StaticResource MenuButtonText}" />
                    </ToggleButton>
                    <TextBlock Grid.Column="1"
                               FontSize="29"
                               LineHeight="32"
                               LineStackingStrategy="BlockLineHeight"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontWeight="Light"
                               Margin="2,0,0,0"
                               FontFamily="{StaticResource mainFontFamily}"
                               Foreground="#123123"
                               Text="{StaticResource symbolBlasterString}" />

                </Grid>

                <TabControl Style="{StaticResource TabControlStyle1}"
                            Margin="0,8,0,0"
                            Grid.Row="1"
                            Padding="0"
                            x:Name="mainTabControl"
                            Background="{StaticResource menuFillBrush}"
                            VerticalAlignment="Top"
                            KeyboardNavigation.DirectionalNavigation="None"
                            KeyboardNavigation.IsTabStop="False"
                            KeyboardNavigation.AcceptsReturn="False"
                            PreviewKeyDown="IgnoreSpacePress">
                    <TabItem Style="{StaticResource TabItemStyle1}"
                             IsSelected="{Binding MainTabControlSelection, Mode=OneWay, Converter={StaticResource mainTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:MainTabPage.Configure}, FallbackValue=True}">
                        <TabItem.Tag>
                            <CornerRadius>4,0,0,0</CornerRadius>
                        </TabItem.Tag>
                        <TabItem.Header>
                            <RadioButton HorizontalAlignment="Stretch"
                                         HorizontalContentAlignment="Stretch"
                                         Style="{StaticResource RegularToggleButtonStyle}"
                                         Command="{Binding SetMainTabControlSelection}"
                                         CommandParameter="{x:Static viewModel:MainTabPage.Configure}"
                                         IsChecked="{Binding MainTabControlSelection, Mode=OneWay, Converter={StaticResource mainTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:MainTabPage.Configure}}">
                                <RadioButton.Tag>
                                    <CornerRadius>4,0,0,0</CornerRadius>
                                </RadioButton.Tag>
                                <TextBlock Text="{Binding Source={StaticResource configureMenuHeading}, Mode=OneWay, StringFormat='{}{0}'}"
                                           Margin="8,0"
                                           HorizontalAlignment="Center"
                                           Foreground="{StaticResource whiteColorBrush}"
                                           Style="{StaticResource buttonText}" />
                            </RadioButton>
                        </TabItem.Header>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Popup IsOpen="{Binding ElementName=addConfigurationToggleButton, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                   PlacementTarget="{Binding ElementName=addConfigurationToggleButton}"
                                   StaysOpen="False"
                                   Width="224"
                                   Placement="Top"
                                   PlacementRectangle="0,0,40,40"
                                   x:Name="addConfigurationPopup"
                                   Opened="AddConfigurationPopup_Opened"
                                   Closed="AddConfigurationPopup_Closed">
                                <Border Background="#2c3e50">
                                    <Grid>
                                        <StackPanel Orientation="Vertical">
                                            <DockPanel Background="#34495e"
                                                       FlowDirection="RightToLeft">
                                                <Button Style="{StaticResource ButtonStyle1}"
                                                        Width="32"
                                                        x:Name="closeSaveConfigurationButton"
                                                        HorizontalAlignment="Right"
                                                        Background="#e74c3c"
                                                        Foreground="{StaticResource whiteColorBrush}"
                                                        Click="CloseSaveConfigurationButton_Click">
                                                    <Button.Tag>
                                                        <CornerRadius>0</CornerRadius>
                                                    </Button.Tag>
                                                    <TextBlock Text="X"
                                                               FontWeight="Bold" />
                                                </Button>
                                                <TextBlock Text="Save Configuration"
                                                           HorizontalAlignment="Center"
                                                           Margin="8,-4,8,0"
                                                           Style="{StaticResource MenuSectionHeader}"
                                                           Foreground="{StaticResource whiteColorBrush}" />

                                            </DockPanel>
                                            <StackPanel Orientation="Vertical"
                                                        Margin="8">
                                                <DockPanel>
                                                    <TextBlock Text="Name:"
                                                               Style="{StaticResource MenuSectionHeader}"
                                                               Foreground="{StaticResource whiteColorBrush}"
                                                               Margin="0,0,8,0" />
                                                    <TextBox FontFamily="{StaticResource mainFontFamily}"
                                                             FontWeight="DemiBold"
                                                             FontSize="14"
                                                             Height="24"
                                                             MaxLength="16"
                                                             PreviewKeyDown="ConfigurationNameEntryTextBox_PreviewKeyDown"
                                                             Text="{Binding GameViewModel.SaveConfigurationPresetName, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                                             x:Name="configurationNameEntryTextBox" />
                                                </DockPanel>
                                                <Button Margin="0,8,0,0"
                                                        x:Name="saveConfigurationButton"
                                                        Command="{Binding GameViewModel.SaveConfigurationPreset}"
                                                        Click="SaveConfigurationButton_Click">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}"
                                                               BasedOn="{StaticResource ButtonStyle1}">
                                                            <Setter Property="IsEnabled"
                                                                    Value="True" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=configurationNameEntryTextBox, Path=Text, Mode=OneWay}"
                                                                             Value="">
                                                                    <Setter Property="IsEnabled"
                                                                            Value="False" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <TextBlock Style="{StaticResource buttonText}"
                                                               Text="Save" />
                                                </Button>
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Popup>

                            <Grid Margin="8,0,8,8"
                                  Grid.Row="1">
                                <ToggleButton Style="{StaticResource RegularToggleButtonStyle}"
                                              BorderThickness="0"
                                              x:Name="addConfigurationToggleButton">
                                    <ToggleButton.Tag>
                                        <CornerRadius>4</CornerRadius>
                                    </ToggleButton.Tag>
                                    <TextBlock Text="{StaticResource addConfigurationToPresetsString}"
                                               Style="{StaticResource buttonText}"
                                               TextAlignment="Center" />
                                </ToggleButton>
                                <Button Background="#00000000"
                                        Opacity="0"
                                        Style="{StaticResource ButtonStyle1}"
                                        IsHitTestVisible="False"
                                        Click="PopupCloseHitTestBlocker_Click"
                                        x:Name="popupCloseHitTestBlocker">
                                    <Button.Tag>
                                        <CornerRadius>4</CornerRadius>
                                    </Button.Tag>
                                </Button>
                            </Grid>

                            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto"
                                          CanContentScroll="False"
                                          BorderThickness="0"
                                          Padding="8,0,8,0"
                                          Margin="0,8,0,8">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}">
                                        <Style.Resources>
                                            <Style TargetType="{x:Type ScrollBar}"
                                                   BasedOn="{StaticResource ScrollBarStyle1}" />
                                        </Style.Resources>
                                    </Style>
                                </ScrollViewer.Style>
                                <StackPanel Orientation="Vertical">


                                    <Border Style="{StaticResource MenuSectionContainer}"
                                            Margin="0">
                                        <StackPanel Orientation="Vertical">
                                            <DockPanel>
                                                <TextBlock Text="{Binding Source={StaticResource renderQualitySectionHeading}, Mode=OneWay, StringFormat='{}{0}:'}"
                                                           Style="{StaticResource MenuSectionHeader}" />
                                                <Border Style="{StaticResource HelpIcon}"
                                                        ToolTip="Toggles the edge-rendering mode of game objects between Low quality (aliased edges) and High quality (anti-aliased edges).">
                                                    <TextBlock Text="?" />
                                                </Border>
                                            </DockPanel>
                                            <UniformGrid Columns="3"
                                                         Rows="1"
                                                         Margin="8,0,8,8"
                                                         HorizontalAlignment="Left">
                                                <TextBlock Text="Low"
                                                           Margin="0,0,6,0"
                                                           Style="{StaticResource SettingLabelText}" />
                                                <ToggleButton ToolTip="Toggle game render quality"
                                                              Command="{Binding GameViewModel.ToggleRenderQuality, Mode=OneWay}"
                                                              Checked="ResetFocus"
                                                              Unchecked="ResetFocus">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}"
                                                               BasedOn="{StaticResource MenuSettingToggleButton}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding GameViewModel.RenderQuality, Mode=OneWay}"
                                                                             Value="{x:Static EdgeMode.Aliased}">
                                                                    <Setter Property="IsChecked"
                                                                            Value="False" />
                                                                    <Setter Property="CommandParameter"
                                                                            Value="{x:Static EdgeMode.Unspecified}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding GameViewModel.RenderQuality, Mode=OneWay}"
                                                                             Value="{x:Static EdgeMode.Unspecified}">
                                                                    <Setter Property="IsChecked"
                                                                            Value="True" />
                                                                    <Setter Property="CommandParameter"
                                                                            Value="{x:Static EdgeMode.Aliased}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <TextBlock Text="High"
                                                           TextAlignment="Right"
                                                           Margin="6,0,0,0"
                                                           Style="{StaticResource SettingLabelText}" />
                                            </UniformGrid>
                                        </StackPanel>
                                    </Border>

                                    <Border Style="{StaticResource MenuSectionContainer}">
                                        <StackPanel Orientation="Vertical">
                                            <DockPanel>
                                                <TextBlock Text="{Binding Source={StaticResource controlsSectionHeading}, Mode=OneWay, StringFormat='{}{0}:'}"
                                                           Style="{StaticResource MenuSectionHeader}" />
                                                <Border Style="{StaticResource HelpIcon}"
                                                        ToolTip="Toggles the game control modes.&#10;RETRO mode uses left and right directional controls to command Player rotation and a thrust control to command Player acceleration.&#10;WASD mode uses directional controls to command both Player rotation and acceleration.">
                                                    <TextBlock Text="?" />
                                                </Border>
                                            </DockPanel>

                                            <StackPanel Orientation="Vertical"
                                                        Margin="8,0,8,8">
                                                <UniformGrid Columns="3"
                                                             Rows="1"
                                                             HorizontalAlignment="Left">
                                                    <TextBlock Text="{Binding Source={x:Static game:PlayerControlMode.Retro}, Mode=OneWay, StringFormat='{}{0}'}"
                                                               Margin="0,0,6,0"
                                                               Style="{StaticResource SettingLabelText}" />
                                                    <ToggleButton ToolTip="Toggle game control modes"
                                                                  Margin="0"
                                                                  Checked="ResetFocus"
                                                                  Unchecked="ResetFocus"
                                                                  Command="{Binding GameViewModel.ToggleGameControlMode, Mode=OneWay}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}"
                                                                   BasedOn="{StaticResource MenuSettingToggleButton}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                 Value="{x:Static game:PlayerControlMode.Retro}">
                                                                        <Setter Property="IsChecked"
                                                                                Value="False" />
                                                                        <Setter Property="CommandParameter"
                                                                                Value="{x:Static game:PlayerControlMode.WASD}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                 Value="{x:Static game:PlayerControlMode.WASD}">
                                                                        <Setter Property="IsChecked"
                                                                                Value="True" />
                                                                        <Setter Property="CommandParameter"
                                                                                Value="{x:Static game:PlayerControlMode.Retro}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <TextBlock Text="{Binding Source={x:Static game:PlayerControlMode.WASD}, Mode=OneWay, StringFormat='{}{0}'}"
                                                               TextAlignment="Right"
                                                               Margin="6,0,0,0"
                                                               Style="{StaticResource SettingLabelText}" />
                                                </UniformGrid>

                                                <Expander Style="{StaticResource ExpanderStyle1}"
                                                          Grid.Row="1"
                                                          BorderThickness="0"
                                                          Padding="0"
                                                          IsExpanded="{Binding ShowUiControlMappings, Mode=OneWay}"
                                                          HorizontalContentAlignment="Stretch"
                                                          Margin="0,8,0,0"
                                                          Tag="{Binding ToggleShowUiControlMappings, Mode=OneWay}">
                                                    <Expander.Header>
                                                        <DockPanel Style="{StaticResource buttonWithIconAndTextDockPanel}"
                                                                   ClipToBounds="True"
                                                                   Cursor="Hand">
                                                            <Border>
                                                                <TextBlock>
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="{x:Type TextBlock}"
                                                                               BasedOn="{StaticResource buttonTextIconArrows}">
                                                                            <Setter Property="Text"
                                                                                    Value="🡇" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding ShowUiControlMappings, Mode=OneWay}"
                                                                                             Value="True">
                                                                                    <Setter Property="Text"
                                                                                            Value="🡅" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </Border>
                                                            <TextBlock>
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}"
                                                                           BasedOn="{StaticResource buttonText}">
                                                                        <Setter Property="Text"
                                                                                Value="Show Controls" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ShowUiControlMappings, Mode=OneWay}"
                                                                                         Value="True">
                                                                                <Setter Property="Text"
                                                                                        Value="Hide Controls" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                        </DockPanel>

                                                    </Expander.Header>
                                                    <Grid>
                                                        <Grid HorizontalAlignment="Left"
                                                              Margin="0,8,0,0">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="96" />
                                                                <ColumnDefinition />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>

                                                            <Rectangle Style="{StaticResource keyMappingsRectangle}" />
                                                            <Rectangle Style="{StaticResource keyMappingsRectangle}"
                                                                       Grid.Row="1" />
                                                            <Rectangle Grid.Row="2">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}"
                                                                           BasedOn="{StaticResource keyMappingsRectangle}">
                                                                        <Setter Property="Visibility"
                                                                                Value="Visible" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                         Value="{x:Static game:PlayerControlMode.Retro}">
                                                                                <Setter Property="Visibility"
                                                                                        Value="Collapsed" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                            <Rectangle Style="{StaticResource keyMappingsRectangle}"
                                                                       Grid.Row="3" />
                                                            <Rectangle Style="{StaticResource keyMappingsRectangle}"
                                                                       Margin="40,0,8,0"
                                                                       Grid.Row="4" />
                                                            <Rectangle Style="{StaticResource keyMappingsRectangle}"
                                                                       Margin="64,0,8,0"
                                                                       Grid.Row="5" />

                                                            <TextBlock Grid.Column="1">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}"
                                                                           BasedOn="{StaticResource SettingLabelText}">
                                                                        <Setter Property="Text"
                                                                                Value="Up" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                         Value="{x:Static game:PlayerControlMode.Retro}">
                                                                                <Setter Property="Text"
                                                                                        Value="Accelerate" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                            <DockPanel>
                                                                <ToggleButton>
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}"
                                                                               BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding GameViewModel.IsWKeyPressed, Mode=OneWay}"
                                                                                                   Value="True" />
                                                                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                                   Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                        <Condition Binding="{Binding ElementName=addConfigurationPopup, Path=IsOpen}"
                                                                                                   Value="False" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="IsChecked"
                                                                                            Value="True" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <TextBlock Text="W" />
                                                                </ToggleButton>
                                                                <ToggleButton>
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}"
                                                                               BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding GameViewModel.IsUpArrowPressed, Mode=OneWay}"
                                                                                                   Value="True" />
                                                                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                                   Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="IsChecked"
                                                                                            Value="True" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <TextBlock Text="🡅" />
                                                                </ToggleButton>
                                                            </DockPanel>
                                                            <DockPanel Grid.Row="1">
                                                                <ToggleButton Grid.Row="1">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}"
                                                                               BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding GameViewModel.IsAKeyPressed, Mode=OneWay}"
                                                                                                   Value="True" />
                                                                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                                   Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                        <Condition Binding="{Binding ElementName=addConfigurationPopup, Path=IsOpen}"
                                                                                                   Value="False" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="IsChecked"
                                                                                            Value="True" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <TextBlock Text="A" />
                                                                </ToggleButton>
                                                                <ToggleButton Grid.Row="1">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}"
                                                                               BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding GameViewModel.IsLeftArrowPressed, Mode=OneWay}"
                                                                                                   Value="True" />
                                                                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                                   Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="IsChecked"
                                                                                            Value="True" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <TextBlock Text="🡄" />
                                                                </ToggleButton>
                                                            </DockPanel>
                                                            <TextBlock Grid.Row="1"
                                                                       Grid.Column="1">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}"
                                                                           BasedOn="{StaticResource SettingLabelText}">
                                                                        <Setter Property="Text"
                                                                                Value="Left" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                         Value="{x:Static game:PlayerControlMode.Retro}">
                                                                                <Setter Property="Text"
                                                                                        Value="Rotate Left" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>

                                                            <DockPanel Grid.Row="2">
                                                                <ToggleButton Grid.Row="2">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}"
                                                                               BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                            <Setter Property="Visibility"
                                                                                    Value="Visible" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                             Value="{x:Static game:PlayerControlMode.Retro}">
                                                                                    <Setter Property="Visibility"
                                                                                            Value="Collapsed" />
                                                                                </DataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding GameViewModel.IsSKeyPressed, Mode=OneWay}"
                                                                                                   Value="True" />
                                                                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                                   Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="IsChecked"
                                                                                            Value="True" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <TextBlock Text="S" />
                                                                </ToggleButton>
                                                                <ToggleButton Grid.Row="2">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}"
                                                                               BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                            <Setter Property="Visibility"
                                                                                    Value="Visible" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                             Value="{x:Static game:PlayerControlMode.Retro}">
                                                                                    <Setter Property="Visibility"
                                                                                            Value="Collapsed" />
                                                                                </DataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding GameViewModel.IsDownArrowPressed, Mode=OneWay}"
                                                                                                   Value="True" />
                                                                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                                   Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="IsChecked"
                                                                                            Value="True" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <TextBlock Text="🡇" />
                                                                </ToggleButton>
                                                            </DockPanel>

                                                            <TextBlock Grid.Row="2"
                                                                       Grid.Column="1"
                                                                       Text="Down">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}"
                                                                           BasedOn="{StaticResource SettingLabelText}">
                                                                        <Setter Property="Visibility"
                                                                                Value="Visible" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                         Value="{x:Static game:PlayerControlMode.Retro}">
                                                                                <Setter Property="Visibility"
                                                                                        Value="Collapsed" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>

                                                            <DockPanel Grid.Row="3">
                                                                <ToggleButton Grid.Row="3">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}"
                                                                               BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding GameViewModel.IsDKeyPressed, Mode=OneWay}"
                                                                                                   Value="True" />
                                                                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                                   Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                        <Condition Binding="{Binding ElementName=addConfigurationPopup, Path=IsOpen}"
                                                                                                   Value="False" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="IsChecked"
                                                                                            Value="True" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <TextBlock Text="D" />
                                                                </ToggleButton>
                                                                <ToggleButton Grid.Row="3">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}"
                                                                               BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding GameViewModel.IsRightArrowPressed, Mode=OneWay}"
                                                                                                   Value="True" />
                                                                                        <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                                   Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="IsChecked"
                                                                                            Value="True" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                    <TextBlock Text="🡆" />
                                                                </ToggleButton>
                                                            </DockPanel>
                                                            <TextBlock Grid.Row="3"
                                                                       Grid.Column="1">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}"
                                                                           BasedOn="{StaticResource SettingLabelText}">
                                                                        <Setter Property="Text"
                                                                                Value="Right" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding GameViewModel.PlayerControlMode, Mode=OneWay}"
                                                                                         Value="{x:Static game:PlayerControlMode.Retro}">
                                                                                <Setter Property="Text"
                                                                                        Value="Rotate Right" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                            <ToggleButton Grid.Row="4">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}"
                                                                           BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                        <Style.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding GameViewModel.IsWarpPressed, Mode=OneWay}"
                                                                                               Value="True" />
                                                                                    <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                               Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="IsChecked"
                                                                                        Value="True" />
                                                                            </MultiDataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                                <TextBlock Text="H" />
                                                            </ToggleButton>
                                                            <TextBlock Grid.Row="4"
                                                                       Grid.Column="1"
                                                                       Text="Warp"
                                                                       Style="{StaticResource SettingLabelText}" />
                                                            <ToggleButton Grid.Row="5"
                                                                          Width="Auto"
                                                                          MaxWidth="160">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}"
                                                                           BasedOn="{StaticResource UiControlMappingToggleButton}">
                                                                        <Style.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding GameViewModel.IsFirePressed, Mode=OneWay}"
                                                                                               Value="True" />
                                                                                    <Condition Binding="{Binding GameViewModel.GameState, Mode=OneWay}"
                                                                                               Value="{x:Static viewModel:GameState.GAME_ACTIVE}" />
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="IsChecked"
                                                                                        Value="True" />
                                                                            </MultiDataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                                <TextBlock Text="SPACE"
                                                                           FontSize="14"
                                                                           Margin="4,0" />
                                                            </ToggleButton>
                                                            <TextBlock Grid.Row="5"
                                                                       Grid.Column="1"
                                                                       Text="Fire"
                                                                       Style="{StaticResource SettingLabelText}" />
                                                        </Grid>
                                                    </Grid>
                                                </Expander>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>

                                    <Border Style="{StaticResource MenuSectionContainer}">
                                        <StackPanel Orientation="Vertical">
                                            <DockPanel>
                                                <TextBlock Text="{Binding Source={StaticResource gameObjectsSectionHeading}, Mode=OneWay, StringFormat='{}{0}:'}"
                                                           Style="{StaticResource MenuSectionHeader}" />
                                                <Border Style="{StaticResource HelpIcon}"
                                                        ToolTip="Lists for changing the sprite, foreground, and background of each game object.&#10;In order to visually align the origin of projectiles, the Player and  Projectile sprites can be rotated via the +45° and -45° buttons.">
                                                    <TextBlock Text="?" />
                                                </Border>
                                            </DockPanel>
                                            <DockPanel Margin="8,4">
                                                <TextBlock Style="{StaticResource gameSpriteSettingLabelText}"
                                                           Text="{Binding Source={StaticResource symbolGroupSectionHeading}, Mode=OneWay, StringFormat='{}{0}'}"
                                                           TextWrapping="Wrap" />
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ComboBox Style="{StaticResource ComboBoxStyleRegular}"
                                                              BorderThickness="0"
                                                              Margin="0,0,8,0"
                                                              DropDownClosed="ResetFocus"
                                                              VerticalContentAlignment="Center"
                                                              HorizontalContentAlignment="Stretch"
                                                              ItemsSource="{Binding GameViewModel.SpriteGroupCollectionView, Mode=OneWay}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding}"
                                                                           Style="{StaticResource buttonText}" />
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    <Button Grid.Column="1"
                                                            Width="32"
                                                            Command="{Binding GameViewModel.RandomizeCurrentSprites, Mode=OneWay}"
                                                            Style="{StaticResource ButtonStyle1}">
                                                        <TextBlock Text="🎲"
                                                                   Style="{StaticResource buttonText}"
                                                                   FontSize="20"
                                                                   ToolTip="Randomize Game Object Sprites"
                                                                   FontWeight="Normal" />
                                                    </Button>
                                                </Grid>
                                            </DockPanel>
                                            <DockPanel Margin="8,4">
                                                <TextBlock Style="{StaticResource gameSpriteSettingLabelText}"
                                                           Text="{Binding Source={StaticResource colorSchemeSectionHeading}, Mode=OneWay, StringFormat='{}{0}'}"
                                                           TextWrapping="Wrap" />
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ComboBox Style="{StaticResource ComboBoxStyleRegular}"
                                                              BorderThickness="0"
                                                              Margin="0,0,8,0"
                                                              DropDownClosed="ResetFocus"
                                                              VerticalContentAlignment="Center"
                                                              HorizontalContentAlignment="Stretch"
                                                              ItemsSource="{Binding GameViewModel.ColorSchemeCollectionView, Mode=OneWay}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding}"
                                                                           Style="{StaticResource buttonText}" />
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    <Button Grid.Column="1"
                                                            Width="32"
                                                            Command="{Binding GameViewModel.RandomizeGameColors, Mode=OneWay}"
                                                            Style="{StaticResource ButtonStyle1}">
                                                        <TextBlock Text="🎲"
                                                                   Style="{StaticResource buttonText}"
                                                                   FontSize="20"
                                                                   ToolTip="Randomize Game Object Sprites"
                                                                   FontWeight="Normal" />
                                                    </Button>
                                                </Grid>
                                            </DockPanel>
                                            <Expander Style="{StaticResource ExpanderStyle1}"
                                                      Grid.Row="1"
                                                      BorderThickness="0"
                                                      Padding="0"
                                                      IsExpanded="{Binding ShowGameSpriteMappings, Mode=OneWay, FallbackValue=True}"
                                                      HorizontalContentAlignment="Stretch"
                                                      VerticalContentAlignment="Stretch"
                                                      Margin="8,4,8,8"
                                                      Tag="{Binding ToggleShowGameSpriteMappings, Mode=OneWay}">
                                                <Expander.Header>
                                                    <DockPanel Style="{StaticResource buttonWithIconAndTextDockPanel}"
                                                               ClipToBounds="True"
                                                               Cursor="Hand"
                                                               HorizontalAlignment="Stretch">
                                                        <Border>
                                                            <TextBlock>
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}"
                                                                           BasedOn="{StaticResource buttonTextIconArrows}">
                                                                        <Setter Property="Text"
                                                                                Value="🡇" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ShowGameSpriteMappings, Mode=OneWay}"
                                                                                         Value="True">
                                                                                <Setter Property="Text"
                                                                                        Value="🡅" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                        </Border>
                                                        <TextBlock>
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}"
                                                                       BasedOn="{StaticResource buttonText}">
                                                                    <Setter Property="Text"
                                                                            Value="{StaticResource showSpriteOptionsString}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ShowGameSpriteMappings, Mode=OneWay}"
                                                                                     Value="True">
                                                                            <Setter Property="Text"
                                                                                    Value="Hide Sprite Options" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </Expander.Header>
                                                <StackPanel VerticalAlignment="Top"
                                                            Margin="0,8,0,0">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="56" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Border Grid.Column="1"
                                                                Grid.ColumnSpan="3"
                                                                HorizontalAlignment="Stretch"
                                                                CornerRadius="4"
                                                                Background="{StaticResource warningBrush}"
                                                                BorderThickness="0"
                                                                Margin="-4,0,0,0"
                                                                Padding="4">
                                                        </Border>

                                                        <TextBlock Text="{Binding Source={StaticResource gameWorldSettingsString}, Mode=OneWay, StringFormat='{}{0}'}"
                                                                   TextWrapping="Wrap"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}" />


                                                        <Border Grid.Column="1"
                                                                Background="{StaticResource sectionFillBrush}"
                                                                Padding="4,4,0,4"
                                                                Margin="0,4,4,4"
                                                                CornerRadius="4">
                                                            <StackPanel Margin="0"
                                                                        Style="{StaticResource gameObjectColorsPanel}">
                                                                <Border Style="{StaticResource gameObjectFillButtonContainer}"
                                                                        Margin="0,0,8,0">
                                                                    <Button Style="{StaticResource gameObjectStrokeButton}"
                                                                            Background="{Binding GameViewModel.GameForegroundBrush, Mode=OneWay}"
                                                                            Command="{Binding GameViewModel.SetGameForeground, Mode=OneWay}"
                                                                            Tag="{x:Type viewModel:GameViewModel}"
                                                                            ToolTip="Set Game Color"
                                                                            Margin="0" />
                                                                </Border>
                                                                <Border Style="{StaticResource gameObjectFillButtonContainer}"
                                                                        Margin="0,0,4,0">
                                                                    <Button Style="{StaticResource gameObjectFillButton}"
                                                                            Background="{Binding GameViewModel.GameBackgroundBrush, Mode=OneWay}"
                                                                            Tag="{x:Type viewModel:GameViewModel}"
                                                                            Margin="0"
                                                                            ToolTip="Set Game Background" />
                                                                </Border>

                                                            </StackPanel>
                                                        </Border>

                                                        <UniformGrid Grid.Column="2"
                                                                     Rows="1"
                                                                     Columns="2"
                                                                     Grid.ColumnSpan="2"
                                                                     Margin="4,4">
                                                            <Button Style="{StaticResource gameWorldButtons}"
                                                                    Background="{StaticResource Button.Static.Background1}"
                                                                    PreviewKeyDown="IgnoreSpacePress"
                                                                    Command="{Binding GameViewModel.ApplyForegroundBackgroundToAll, Mode=OneWay}">
                                                                <TextBlock Text="{Binding Source={StaticResource applyToAllGameWorldButtonString}, Mode=OneWay, StringFormat='{}{0}'}"
                                                                           ToolTip="Apply Game Color to All Objects"
                                                                           Width="50"
                                                                           Margin="0,0,0,0"
                                                                           TextWrapping="Wrap" />
                                                            </Button>
                                                            <Button Style="{StaticResource gameWorldButtons}"
                                                                    Background="{StaticResource redColorBrush}"
                                                                    Margin="4,0,0,0"
                                                                    Padding="4"
                                                                    PreviewKeyDown="IgnoreSpacePress"
                                                                    Command="{Binding GameViewModel.ResetAllForegroundBackground, Mode=OneWay}">
                                                                <TextBlock Text="{Binding Source={StaticResource resetAllGameWorldButtonString}, Mode=OneWay, StringFormat='{}{0}'}"
                                                                           FontSize="14"
                                                                           Width="50"
                                                                           TextWrapping="Wrap"
                                                                           ToolTip="Reset Color of All Objects and Custom Colors"
                                                                           Margin="0,0,0,0" />
                                                            </Button>
                                                        </UniformGrid>
                                                    </Grid>

                                                    <DockPanel Style="{StaticResource gameObjectOptionsRow}">
                                                        <TextBlock VerticalAlignment="Center"
                                                                   Text="Player"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}" />
                                                        <Border Style="{StaticResource gameObjectFillButtonContainer}">
                                                            <Button Style="{StaticResource gameObjectFillButton}"
                                                                    Background="{Binding GameViewModel.PlayerBrush, Mode=OneWay}"
                                                                    Tag="{x:Type game:Player}" />
                                                        </Border>

                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*" />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <ComboBox Style="{StaticResource gameSpriteComboBox}"
                                                                      ItemsSource="{Binding GameViewModel.PlayerSpriteCollectionView, Mode=OneWay}"
                                                                      DropDownClosed="ResetFocus"
                                                                      Margin="0,0,8,0"
                                                                      Width="Auto"
                                                                      Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.GameViewModel.PlayerRotateTransform, Mode=OneWay}" />
                                                            <UniformGrid Rows="1"
                                                                         Columns="2"
                                                                         Grid.Column="1">
                                                                <Button Style="{StaticResource rotateGameSpriteClockwiseButton}"
                                                                        CommandParameter="{x:Type game:Player}">
                                                                    <TextBlock Text="+&#10;45°" />
                                                                </Button>
                                                                <Button Style="{StaticResource rotateGameSpriteCounterClockwiseButton}"
                                                                        CommandParameter="{x:Type game:Player}">
                                                                    <TextBlock Text="−&#10;45°" />
                                                                </Button>
                                                            </UniformGrid>
                                                        </Grid>
                                                    </DockPanel>

                                                    <DockPanel Style="{StaticResource gameObjectOptionsRow}">
                                                        <TextBlock Text="Projectile"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}">
                                                        </TextBlock>
                                                        <Border Style="{StaticResource gameObjectFillButtonContainer}">
                                                            <Button Style="{StaticResource gameObjectFillButton}"
                                                                    Background="{Binding GameViewModel.ProjectileBrush, Mode=OneWay}"
                                                                    Tag="{x:Type game:Projectile}" />
                                                        </Border>

                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*" />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <ComboBox Style="{StaticResource gameSpriteComboBox}"
                                                                      ItemsSource="{Binding GameViewModel.ProjectileSpriteCollectionView, Mode=OneWay}"
                                                                      DropDownClosed="ResetFocus"
                                                                      Margin="0,0,8,0"
                                                                      Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.GameViewModel.ProjectileRotateTransform, Mode=OneWay}" />
                                                            <UniformGrid Grid.Column="1"
                                                                         Rows="1"
                                                                         Columns="2">
                                                                <Button Style="{StaticResource rotateGameSpriteClockwiseButton}"
                                                                        CommandParameter="{x:Type game:Projectile}">
                                                                    <TextBlock Text="+&#10;45°" />
                                                                </Button>
                                                                <Button Style="{StaticResource rotateGameSpriteCounterClockwiseButton}"
                                                                        CommandParameter="{x:Type game:Projectile}">
                                                                    <TextBlock Text="−&#10;45°" />
                                                                </Button>
                                                            </UniformGrid>
                                                        </Grid>
                                                    </DockPanel>

                                                    <DockPanel Style="{StaticResource gameObjectOptionsRow}">
                                                        <TextBlock Text="Player&#10;Debris"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}" />
                                                        <Border Style="{StaticResource gameObjectFillButtonContainer}">
                                                            <Button Style="{StaticResource gameObjectFillButton}"
                                                                    Background="{Binding GameViewModel.PlayerDebrisBrush, Mode=OneWay}"
                                                                    Tag="{x:Type game:PlayerDebris}" />
                                                        </Border>

                                                        <ComboBox Style="{StaticResource gameSpriteComboBox}"
                                                                  ItemsSource="{Binding GameViewModel.PlayerDebrisSpriteCollectionView, Mode=OneWay}"
                                                                  DropDownClosed="ResetFocus"
                                                                  Grid.Row="6"
                                                                  Grid.Column="2"
                                                                  Grid.ColumnSpan="2" />
                                                    </DockPanel>

                                                    <DockPanel Style="{StaticResource gameObjectOptionsRow}">
                                                        <TextBlock Text="Large&#10;Obstacle"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}" />
                                                        <Border Style="{StaticResource gameObjectFillButtonContainer}">
                                                            <Button Style="{StaticResource gameObjectFillButton}"
                                                                    Background="{Binding GameViewModel.LargeObstacleBrush, Mode=OneWay}"
                                                                    Tag="{x:Type game:LargeObstacle}" />
                                                        </Border>

                                                        <ComboBox Style="{StaticResource gameSpriteComboBox}"
                                                                  ItemsSource="{Binding GameViewModel.LargeObstacleSpriteCollectionView, Mode=OneWay}"
                                                                  DropDownClosed="ResetFocus"
                                                                  Grid.Row="8"
                                                                  Grid.Column="2"
                                                                  Grid.ColumnSpan="2" />
                                                    </DockPanel>

                                                    <DockPanel Style="{StaticResource gameObjectOptionsRow}">
                                                        <TextBlock Text="Medium&#10;Obstacle"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}" />
                                                        <Border Style="{StaticResource gameObjectFillButtonContainer}">
                                                            <Button Style="{StaticResource gameObjectFillButton}"
                                                                    Background="{Binding GameViewModel.MediumObstacleBrush, Mode=OneWay}"
                                                                    Tag="{x:Type game:MediumObstacle}" />
                                                        </Border>

                                                        <ComboBox Style="{StaticResource gameSpriteComboBox}"
                                                                  ItemsSource="{Binding GameViewModel.MediumObstacleSpriteCollectionView, Mode=OneWay}"
                                                                  DropDownClosed="ResetFocus"
                                                                  Grid.Row="10"
                                                                  Grid.Column="2"
                                                                  Grid.ColumnSpan="2" />
                                                    </DockPanel>

                                                    <DockPanel Style="{StaticResource gameObjectOptionsRow}">
                                                        <TextBlock Text="Small&#10;Obstacle"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}" />
                                                        <Border Style="{StaticResource gameObjectFillButtonContainer}">
                                                            <Button Style="{StaticResource gameObjectFillButton}"
                                                                    Background="{Binding GameViewModel.SmallObstacleBrush, Mode=OneWay}"
                                                                    Tag="{x:Type game:SmallObstacle}" />
                                                        </Border>

                                                        <ComboBox Style="{StaticResource gameSpriteComboBox}"
                                                                  ItemsSource="{Binding GameViewModel.SmallObstacleSpriteCollectionView, Mode=OneWay}"
                                                                  DropDownClosed="ResetFocus"
                                                                  Grid.Row="12"
                                                                  Grid.Column="2"
                                                                  Grid.ColumnSpan="2" />
                                                    </DockPanel>

                                                    <DockPanel Style="{StaticResource gameObjectOptionsRow}">
                                                        <TextBlock Text="Large&#10;Enemy"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}" />
                                                        <Border Style="{StaticResource gameObjectFillButtonContainer}">
                                                            <Button Style="{StaticResource gameObjectFillButton}"
                                                                    Background="{Binding GameViewModel.LargeEnemyBrush, Mode=OneWay}"
                                                                    Tag="{x:Type game:LargeEnemy}" />
                                                        </Border>

                                                        <ComboBox Style="{StaticResource gameSpriteComboBox}"
                                                                  ItemsSource="{Binding GameViewModel.LargeEnemySpriteCollectionView, Mode=OneWay}"
                                                                  DropDownClosed="ResetFocus"
                                                                  Grid.Row="14"
                                                                  Grid.Column="2"
                                                                  Grid.ColumnSpan="2" />
                                                    </DockPanel>

                                                    <DockPanel Style="{StaticResource gameObjectOptionsRow}">
                                                        <TextBlock Text="Small&#10;Enemy"
                                                                   Style="{StaticResource gameSpriteSettingLabelText}" />
                                                        <Border Style="{StaticResource gameObjectFillButtonContainer}">
                                                            <Button Style="{StaticResource gameObjectFillButton}"
                                                                    Background="{Binding GameViewModel.SmallEnemyBrush, Mode=OneWay}"
                                                                    Tag="{x:Type game:SmallEnemy}" />
                                                        </Border>

                                                        <ComboBox Style="{StaticResource gameSpriteComboBox}"
                                                                  ItemsSource="{Binding GameViewModel.SmallEnemySpriteCollectionView, Mode=OneWay}"
                                                                  DropDownClosed="ResetFocus"
                                                                  Grid.Row="16"
                                                                  Grid.Column="2"
                                                                  Grid.ColumnSpan="2" />
                                                    </DockPanel>
                                                </StackPanel>
                                            </Expander>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                            </ScrollViewer>

                        </Grid>
                    </TabItem>
                    <TabItem Style="{StaticResource TabItemStyle1}"
                             IsSelected="{Binding MainTabControlSelection, Mode=OneWay, Converter={StaticResource mainTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:MainTabPage.Presets}}">
                        <TabItem.Header>
                            <RadioButton HorizontalAlignment="Stretch"
                                         HorizontalContentAlignment="Stretch"
                                         BorderThickness="0"
                                         IsChecked="{Binding MainTabControlSelection, Mode=OneWay, Converter={StaticResource mainTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:MainTabPage.Presets}}"
                                         Style="{StaticResource RegularToggleButtonStyle}"
                                         Command="{Binding SetMainTabControlSelection}"
                                         CommandParameter="{x:Static viewModel:MainTabPage.Presets}">
                                <RadioButton.Tag>
                                    <CornerRadius>0,0,0,0</CornerRadius>
                                </RadioButton.Tag>
                                <TextBlock Text="{StaticResource presetsMenuHeading}"
                                           HorizontalAlignment="Center"
                                           Foreground="{StaticResource whiteColorBrush}"
                                           Style="{StaticResource buttonText}" />
                            </RadioButton>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <TabControl Style="{StaticResource TabControlStyle1}"
                                        Margin="8"
                                        Grid.Row="1"
                                        Padding="8,0,8,8"
                                        Background="#cfcfcf"
                                        VerticalAlignment="Top"
                                        KeyboardNavigation.DirectionalNavigation="None"
                                        KeyboardNavigation.IsTabStop="False"
                                        KeyboardNavigation.AcceptsReturn="False"
                                        PreviewKeyDown="IgnoreSpacePress">
                                <TabItem Style="{StaticResource TabItemStyle1}"
                                         IsSelected="{Binding PresetsTabControlSelection, Mode=OneWay, Converter={StaticResource presetsTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:PresetsTabPage.BuiltIn}}">
                                    <TabItem.Tag>
                                        <CornerRadius>4,0,0,0</CornerRadius>
                                    </TabItem.Tag>
                                    <TabItem.Header>
                                        <RadioButton HorizontalAlignment="Stretch"
                                                     HorizontalContentAlignment="Stretch"
                                                     BorderThickness="0"
                                                     IsChecked="{Binding PresetsTabControlSelection, Mode=OneWay, Converter={StaticResource presetsTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:PresetsTabPage.BuiltIn}}"
                                                     Command="{Binding SetPresetsTabControlSelection}"
                                                     CommandParameter="{x:Static viewModel:PresetsTabPage.BuiltIn}"
                                                     Style="{StaticResource RegularToggleButtonStyle}">
                                            <ToggleButton.Tag>
                                                <CornerRadius>4,0,0,0</CornerRadius>
                                            </ToggleButton.Tag>
                                            <TextBlock Text="{StaticResource builtInPresetsMenuHeading}"
                                                       Margin="8,0"
                                                       HorizontalAlignment="Center"
                                                       Foreground="{StaticResource whiteColorBrush}"
                                                       Style="{StaticResource buttonText}" />
                                        </RadioButton>
                                    </TabItem.Header>

                                    <Grid>


                                        <Border Style="{StaticResource MenuSectionContainer}"
                                                Margin="0,8,0,0">
                                            <Grid Margin="8,0,8,8">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <ListBox Margin="-1,7,-1,-1"
                                                         Grid.Row="0"
                                                         SelectionChanged="ListBox_SelectionChanged"
                                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                         Padding="0,8,0,0"
                                                         BorderThickness="0"
                                                         HorizontalAlignment="Stretch"
                                                         HorizontalContentAlignment="Stretch"
                                                         Focusable="False"
                                                         KeyboardNavigation.DirectionalNavigation="None"
                                                         IsTabStop="False"
                                                         ItemsSource="{Binding GameViewModel.ConfigurationPresetBuiltInCollectionView, Mode=OneWay}">
                                                    <ListBox.Style>
                                                        <Style TargetType="{x:Type ListBox}"
                                                               BasedOn="{StaticResource ListBoxStyle1}">
                                                            <Setter Property="Visibility"
                                                                    Value="Visible" />
                                                            <Style.Resources>
                                                                <Style TargetType="{x:Type ScrollBar}"
                                                                       BasedOn="{StaticResource ScrollBarStyle1}" />
                                                            </Style.Resources>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding GameViewModel.ConfigurationPresetBuiltInCollectionView.Count, Mode=OneWay}"
                                                                             Value="0">
                                                                    <Setter Property="Visibility"
                                                                            Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBox.Style>
                                                    <ListBox.ItemTemplate>
                                                        <StaticResource ResourceKey="configurationPresetDataTemplate" />
                                                    </ListBox.ItemTemplate>
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}"
                                                               BasedOn="{StaticResource ListBoxItemStyle1}" />
                                                    </ListBox.ItemContainerStyle>
                                                </ListBox>

                                                <Button Margin="0,8,0,0"
                                                        Grid.Row="1"
                                                        Command="{Binding GameViewModel.LoadConfigurationPreset, Mode=OneWay}"
                                                        CommandParameter="{x:Static viewModel:PresetType.BuiltIn}"
                                                        Background="{StaticResource greenColorBrush}">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}"
                                                               BasedOn="{StaticResource ButtonStyle1}">
                                                            <Setter Property="IsEnabled"
                                                                    Value="True" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding GameViewModel.ConfigurationPresetBuiltInCollectionView.CurrentItem}"
                                                                             Value="{x:Null}">
                                                                    <Setter Property="IsEnabled"
                                                                            Value="False" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <TextBlock Text="{StaticResource loadPresetString}"
                                                               Style="{StaticResource buttonText}" />
                                                </Button>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </TabItem>
                                <TabItem Style="{StaticResource TabItemStyle1}"
                                         IsSelected="{Binding PresetsTabControlSelection, Mode=OneWay, Converter={StaticResource presetsTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:PresetsTabPage.Custom}}">
                                    <TabItem.Tag>
                                        <CornerRadius>0,4,0,0</CornerRadius>
                                    </TabItem.Tag>
                                    <TabItem.Header>
                                        <RadioButton HorizontalAlignment="Stretch"
                                                     HorizontalContentAlignment="Stretch"
                                                     BorderThickness="0"
                                                     IsChecked="{Binding PresetsTabControlSelection, Mode=OneWay, Converter={StaticResource presetsTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:PresetsTabPage.Custom}}"
                                                     Command="{Binding SetPresetsTabControlSelection}"
                                                     CommandParameter="{x:Static viewModel:PresetsTabPage.Custom}"
                                                     Style="{StaticResource RegularToggleButtonStyle}">
                                            <ToggleButton.Tag>
                                                <CornerRadius>0,4,0,0</CornerRadius>
                                            </ToggleButton.Tag>
                                            <TextBlock Text="{StaticResource customPresetsMenuHeading}"
                                                       HorizontalAlignment="Center"
                                                       Foreground="{StaticResource whiteColorBrush}"
                                                       Style="{StaticResource buttonText}" />
                                        </RadioButton>
                                    </TabItem.Header>
                                    <Border Style="{StaticResource MenuSectionContainer}"
                                            Margin="0,8,0,0"
                                            Grid.Row="1">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <UniformGrid Rows="1"
                                                         Columns="2"
                                                         Margin="8,8,8,0">
                                                <DockPanel>
                                                    <Button Background="{StaticResource redColorBrush}"
                                                            Width="24"
                                                            Margin="0,0,4,0"
                                                            ToolTip="Preset import failed."
                                                            Command="{Binding GameViewModel.ResetPresetImportFailedFlag, Mode=OneWay}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}"
                                                                   BasedOn="{StaticResource ButtonStyle1}">
                                                                <Setter Property="Visibility"
                                                                        Value="Collapsed" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding GameViewModel.PresetImportFailed}"
                                                                                 Value="True">
                                                                        <Setter Property="Visibility"
                                                                                Value="Visible" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <TextBlock Text="!"
                                                                   FontWeight="Bold"
                                                                   FontSize="20" />
                                                    </Button>
                                                    <Button Grid.Column="1"
                                                            Margin="0,0,4,0"
                                                            VerticalContentAlignment="Stretch"
                                                            HorizontalContentAlignment="Stretch"
                                                            Command="{Binding GameViewModel.ImportPresetFromFile, Mode=OneWay}"
                                                            Style="{StaticResource ButtonStyle1}">
                                                        <DockPanel>
                                                            <Border>
                                                                <TextBlock Text="📥︎"
                                                                           FontWeight="Normal"
                                                                           FontSize="20" />
                                                            </Border>
                                                            <TextBlock Text="{StaticResource importPresetString}" />
                                                        </DockPanel>
                                                    </Button>
                                                </DockPanel>

                                                <Button Grid.Row="1"
                                                        Grid.Column="1"
                                                        Margin="4,0,0,0"
                                                        HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Stretch"
                                                        Command="{Binding GameViewModel.ExportPresetToFile, Mode=OneWay}">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}"
                                                               BasedOn="{StaticResource ButtonStyle1}">
                                                            <Setter Property="IsEnabled"
                                                                    Value="True" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding GameViewModel.ConfigurationPresetCustomCollectionView.CurrentItem}"
                                                                             Value="{x:Null}">
                                                                    <Setter Property="IsEnabled"
                                                                            Value="False" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <DockPanel>
                                                        <Border>
                                                            <TextBlock Text="📤︎"
                                                                       FontWeight="Normal"
                                                                       FontSize="20" />
                                                        </Border>
                                                        <TextBlock Text="{StaticResource exportPresetString}" />
                                                    </DockPanel>
                                                </Button>
                                            </UniformGrid>

                                            <Grid Margin="8,0,8,8"
                                                  Grid.Row="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition  Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ListBox Margin="-1,7,-1,-1"
                                                         Grid.Row="0"
                                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                         Padding="0,8,0,0"
                                                         BorderThickness="0"
                                                         HorizontalAlignment="Stretch"
                                                         HorizontalContentAlignment="Stretch"
                                                         KeyboardNavigation.DirectionalNavigation="None"
                                                         IsTabStop="False"
                                                         ItemsSource="{Binding GameViewModel.ConfigurationPresetCustomCollectionView, Mode=OneWay}">
                                                    <ListBox.Style>
                                                        <Style TargetType="{x:Type ListBox}"
                                                               BasedOn="{StaticResource ListBoxStyle1}">
                                                            <Setter Property="Visibility"
                                                                    Value="Visible" />
                                                            <Style.Resources>
                                                                <Style TargetType="{x:Type ScrollBar}"
                                                                       BasedOn="{StaticResource ScrollBarStyle1}" />
                                                            </Style.Resources>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding GameViewModel.ConfigurationPresetCustomCollectionView.Count, Mode=OneWay}"
                                                                             Value="0">
                                                                    <Setter Property="Visibility"
                                                                            Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBox.Style>
                                                    <ListBox.ItemTemplate>
                                                        <StaticResource ResourceKey="configurationPresetDataTemplate" />
                                                    </ListBox.ItemTemplate>
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}"
                                                               BasedOn="{StaticResource ListBoxItemStyle1}" />
                                                    </ListBox.ItemContainerStyle>
                                                </ListBox>
                                                <UniformGrid Grid.Row="2"
                                                             Columns="2"
                                                             Margin="0,8,0,0"
                                                             Rows="1"
                                                             VerticalAlignment="Bottom">
                                                    <UniformGrid.Style>
                                                        <Style TargetType="{x:Type UniformGrid}">
                                                            <Setter Property="Visibility"
                                                                    Value="Visible" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding GameViewModel.ConfigurationPresetCustomCollectionView.Count, Mode=OneWay}"
                                                                             Value="0">
                                                                    <Setter Property="Visibility"
                                                                            Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </UniformGrid.Style>
                                                    <Button Margin="0,0,4,0"
                                                            Command="{Binding GameViewModel.LoadConfigurationPreset, Mode=OneWay}"
                                                            CommandParameter="{x:Static viewModel:PresetType.Custom}"
                                                            Background="{StaticResource greenColorBrush}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}"
                                                                   BasedOn="{StaticResource ButtonStyle1}">
                                                                <Setter Property="IsEnabled"
                                                                        Value="True" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding GameViewModel.ConfigurationPresetCustomCollectionView.CurrentItem}"
                                                                                 Value="{x:Null}">
                                                                        <Setter Property="IsEnabled"
                                                                                Value="False" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <TextBlock Text="{StaticResource loadPresetString}"
                                                                   Style="{StaticResource buttonText}" />
                                                    </Button>
                                                    <Button Margin="4,0,0,0"
                                                            Command="{Binding GameViewModel.DeleteConfigurationPreset, Mode=OneWay}"
                                                            Background="{StaticResource redColorBrush}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}"
                                                                   BasedOn="{StaticResource ButtonStyle1}">
                                                                <Setter Property="IsEnabled"
                                                                        Value="True" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding GameViewModel.ConfigurationPresetCustomCollectionView.CurrentItem}"
                                                                                 Value="{x:Null}">
                                                                        <Setter Property="IsEnabled"
                                                                                Value="False" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <TextBlock Text="{StaticResource deletePresetString}"
                                                                   Style="{StaticResource buttonText}" />
                                                    </Button>
                                                </UniformGrid>
                                            </Grid>

                                            <TextBlock Text="No Custom Presets."
                                                       Grid.Row="1"
                                                       HorizontalAlignment="Center"
                                                       Margin="8,16,8,8">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}"
                                                           BasedOn="{StaticResource MenuSectionHeader}">
                                                        <Setter Property="Visibility"
                                                                Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding GameViewModel.ConfigurationPresetCustomCollectionView.Count, Mode=OneWay}"
                                                                         Value="0">
                                                                <Setter Property="Visibility"
                                                                        Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </TabItem>
                            </TabControl>
                        </Grid>
                    </TabItem>
                    <TabItem Style="{StaticResource TabItemStyle1}"
                             IsSelected="{Binding MainTabControlSelection, Mode=OneWay, Converter={StaticResource mainTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:MainTabPage.Help}}">
                        <TabItem.Header>
                            <RadioButton HorizontalAlignment="Stretch"
                                         HorizontalContentAlignment="Stretch"
                                         Command="{Binding SetMainTabControlSelection}"
                                         CommandParameter="{x:Static viewModel:MainTabPage.Help}"
                                         IsChecked="{Binding MainTabControlSelection, Mode=OneWay, Converter={StaticResource mainTabPageComparisonConverter}, ConverterParameter={x:Static viewModel:MainTabPage.Help}}"
                                         BorderThickness="0"
                                         Style="{StaticResource RegularToggleButtonStyle}">
                                <ToggleButton.Tag>
                                    <CornerRadius>0,4,0,0</CornerRadius>
                                </ToggleButton.Tag>
                                <TextBlock Text="HELP"
                                           Margin="8,0"
                                           HorizontalAlignment="Center"
                                           Foreground="{StaticResource whiteColorBrush}"
                                           Style="{StaticResource buttonText}" />
                            </RadioButton>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Style="{StaticResource MenuSectionContainer}"
                                    Margin="8,8,8,4"
                                    Padding="4,8">
                                <UniformGrid Columns="3"
                                             Rows="1">
                                    <RepeatButton Style="{StaticResource RepeatButtonStyle1}"
                                                  Command="{Binding ChangeHelpDocsFontSize, Mode=OneWay}"
                                                  ToolTip="Increase Documentation Text Size"
                                                  Margin="4,0,4,0">
                                        <RepeatButton.CommandParameter>
                                            <system:Double>1.0</system:Double>
                                        </RepeatButton.CommandParameter>
                                        <TextBlock Text="Text Size +" />
                                    </RepeatButton>
                                    <RepeatButton Style="{StaticResource RepeatButtonStyle1}"
                                                  Command="{Binding ChangeHelpDocsFontSize, Mode=OneWay}"
                                                  ToolTip="Decrease Documentation Text Size"
                                                  Margin="4,0,4,0">
                                        <RepeatButton.CommandParameter>
                                            <system:Double>-1.0</system:Double>
                                        </RepeatButton.CommandParameter>
                                        <TextBlock Text="Text Size -" />
                                    </RepeatButton>
                                    <RadioButton Margin="4,0"
                                                 Command="{Binding ToggleIsHelpPanelExpanded, Mode=OneWay}">
                                        <RadioButton.Style>
                                            <Style TargetType="{x:Type RadioButton}"
                                                   BasedOn="{StaticResource RegularToggleButtonStyle}">
                                                <Setter Property="IsChecked"
                                                        Value="False" />
                                                <Setter Property="ToolTip"
                                                        Value="Increase Size of Reading Area" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsHelpPanelExpanded, Mode=OneWay}"
                                                                 Value="True">
                                                        <Setter Property="IsChecked"
                                                                Value="True" />
                                                        <Setter Property="ToolTip"
                                                                Value="Decrease Size of Reading Area" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </RadioButton.Style>
                                        <ToggleButton.Tag>
                                            <CornerRadius>4</CornerRadius>
                                        </ToggleButton.Tag>
                                        <TextBlock FontSize="13"
                                                   LineHeight="13"
                                                   LineStackingStrategy="BlockLineHeight"
                                                   TextAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource buttonText}">
                                                    <Setter Property="Text"
                                                            Value="Expand&#10;Panel" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsHelpPanelExpanded, Mode=OneWay}"
                                                                     Value="True">
                                                            <Setter Property="Text"
                                                                    Value="Collapse&#10;Panel" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </RadioButton>
                                </UniformGrid>
                            </Border>
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto"
                                          CanContentScroll="False"
                                          BorderThickness="0"
                                          Padding="8,0,8,0"
                                          Grid.Row="1"
                                          Margin="0,8,0,8"
                                          x:Name="helpSectionScrollViewer">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}">
                                        <Style.Resources>
                                            <Style TargetType="{x:Type ScrollBar}"
                                                   BasedOn="{StaticResource ScrollBarStyle1}" />
                                        </Style.Resources>
                                        <Setter Property="TextElement.FontSize"
                                                Value="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13}" />
                                        <Setter Property="TextElement.FontFamily"
                                                Value="Calibri" />
                                    </Style>
                                </ScrollViewer.Style>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <system:String x:Key="whatIsSymbolBlaster">1. What is Symbol Blaster?</system:String>
                                        <system:String x:Key="howToPlay">2. How to Play</system:String>
                                        <system:String x:Key="howToPlayControls">i. Controls</system:String>
                                        <system:String x:Key="howToPlayMechanics">ii. Game Mechanics</system:String>
                                        <system:String x:Key="configure">3. Configure</system:String>
                                        <system:String x:Key="configureSpriteCustomization">i. Sprite Customization</system:String>
                                        <system:String x:Key="presets">4. Presets</system:String>
                                    </StackPanel.Resources>
                                    <Border Style="{StaticResource MenuSectionContainer}"
                                            Margin="0"
                                            Padding="8"
                                            x:Name="helpContentsSection">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="Help Contents:"
                                                       Style="{StaticResource MenuSectionHeaderAdjustable}"
                                                       Margin="8,0,8,8"
                                                       TextWrapping="Wrap" />
                                            <StackPanel Margin="8,0">
                                                <StackPanel.Resources>
                                                    <Style TargetType="{x:Type TextBlock}"
                                                           BasedOn="{StaticResource MenuSectionHeaderAdjustable}">
                                                        <Setter Property="Margin"
                                                                Value="0" />
                                                        <Setter Property="TextWrapping"
                                                                Value="Wrap" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver"
                                                                     Value="True">
                                                                <Setter Property="TextDecorations"
                                                                        Value="Underline" />
                                                                <Setter Property="Cursor"
                                                                        Value="Hand" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Background"
                                                                Value="{x:Null}" />
                                                        <Setter Property="BorderBrush"
                                                                Value="{x:Null}" />
                                                        <Setter Property="BorderThickness"
                                                                Value="0" />
                                                        <Setter Property="HorizontalAlignment"
                                                                Value="Left" />
                                                        <Setter Property="Command"
                                                                Value="{Binding BringElementIntoView, Mode=OneWay}" />
                                                    </Style>
                                                </StackPanel.Resources>
                                                <Button CommandParameter="{Binding ElementName=whatIsSymbolBlasterSection, Mode=OneWay}">
                                                    <TextBlock Text="{StaticResource whatIsSymbolBlaster}" />
                                                </Button>
                                                <Button CommandParameter="{Binding ElementName=howToPlaySection, Mode=OneWay}">
                                                    <TextBlock Text="{StaticResource howToPlay}" />
                                                </Button>
                                                <Button CommandParameter="{Binding ElementName=howToPlayControlsSection, Mode=OneWay}">
                                                    <TextBlock Text="{Binding Source={StaticResource howToPlayControls}, Mode=OneWay, StringFormat='{}   {0}'}" />
                                                </Button>
                                                <Button CommandParameter="{Binding ElementName=howToPlayMechanicsSection, Mode=OneWay}">
                                                    <TextBlock Text="{Binding Source={StaticResource howToPlayMechanics}, Mode=OneWay, StringFormat='{}   {0}'}" />
                                                </Button>
                                                <Button CommandParameter="{Binding ElementName=configureSection, Mode=OneWay}">
                                                    <TextBlock Text="{StaticResource configure}" />
                                                </Button>
                                                <Button CommandParameter="{Binding ElementName=configureSpriteCustomizationSection, Mode=OneWay}">
                                                    <TextBlock Text="{Binding Source={StaticResource configureSpriteCustomization}, Mode=OneWay, StringFormat='{}   {0}'}" />
                                                </Button>
                                                <Button CommandParameter="{Binding ElementName=presetsSection, Mode=OneWay}">
                                                    <TextBlock Text="{StaticResource presets}" />
                                                </Button>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>
                                    <Border Style="{StaticResource MenuSectionContainer}"
                                            Margin="0,8,0,0"
                                            Padding="8"
                                            x:Name="whatIsSymbolBlasterSection">
                                        <StackPanel>
                                            <TextBlock Text="{StaticResource whatIsSymbolBlaster}"
                                                       Style="{StaticResource MenuSectionHeaderAdjustable}" />
                                            <TextBlock Margin="4,8"
                                                       Text="       Inspired by retro arcade game mechanics and visuals, Symbol Blaster is an old-school, 2-D shooter game with modern twists. Whereas many games from the &quot;Golden Age&quot; of arcade systems featured static, pre-defined game object geometries, Symbol Blaster allows the player to customize the geometries and colors of all major game objects (&quot;Sprites&quot;) in real-time. Changing the geometry of a Sprite in Symbol Blaster also changes that Sprite's underlying hit-test geometry, resulting in subtle game-play variations based on the sizes and shapes of customized Sprites. The Sprite geometry customization aspect is based on rendering certain visual, popular, or interesting computer symbols - hence the name Symbol Blaster!"
                                                       TextWrapping="Wrap" />
                                        </StackPanel> 

                                    </Border>
                                    <Border Style="{StaticResource MenuSectionContainer}"
                                            Margin="0,8,0,0"
                                            Padding="8"
                                            x:Name="howToPlaySection">
                                        <StackPanel>
                                            <TextBlock Text="{StaticResource howToPlay}"
                                                       Style="{StaticResource MenuSectionHeaderAdjustable}" />
                                            <StackPanel x:Name="howToPlayControlsSection">
                                                <TextBlock Text="{Binding Source={StaticResource howToPlayControls}, Mode=OneWay, StringFormat='{}   {0}'}"
                                                           Style="{StaticResource MenuSectionHeaderAdjustable}"
                                                           Margin="8,8,0,0" />
                                                <TextBlock Margin="4,8"
                                                           TextWrapping="Wrap">
                                            <Run Text="       Gameplay is facilitated via keyboard controls that are mapped to Player actions. There are two different control modes available:" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                    Text="{Binding Source={x:Static game:PlayerControlMode.Retro}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="and" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                    Text="{Binding Source={x:Static game:PlayerControlMode.WASD}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="." />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                    Text="{Binding Source={x:Static game:PlayerControlMode.Retro}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="mode uses left and right directional controls to command Player rotation and a thrust control to command Player acceleration, while" /> 
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                    Text="{Binding Source={x:Static game:PlayerControlMode.WASD}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="mode uses directional controls to command both Player rotation and acceleration; both modes have a control that enables the Player to fire projectiles. The specific keyboard mappings and control mode switch are both available under the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource configureButtonStyle}">
                                                    <TextBlock />
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="🡆"
                                                    Style="{StaticResource SettingLabelRunAdjustable}" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                    Text="{Binding Source={StaticResource controlsSectionHeading}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="section." />
                                        </TextBlock>
                                            </StackPanel>
                                            <StackPanel x:Name="howToPlayMechanicsSection">
                                                <TextBlock Text="{Binding Source={StaticResource howToPlayMechanics}, Mode=OneWay, StringFormat='{}   {0}'}"
                                                           Style="{StaticResource MenuSectionHeaderAdjustable}"
                                                           Margin="0,16,0,4" />
                                                <TextBlock Margin="4,8"
                                                           TextWrapping="Wrap">
                                            <Run Text="         The goal of the game is for the Player, while avoiding destruction, to score points by destroying the Obstacles and Enemies that appear in the game world. The Player starts with a fixed number of lives, displayed beneath the current score in the top left-hand corner above the game world. Obstacles appear as rotating Sprites that, except for the smallest Obstacles, will break apart into smaller Obstacles when hit by Player projectiles. Enemies appear as non-rotating sprites that fire projectiles - large Enemies fire in random directions, while small Enemies fire at the Player's location. &#10;&#10;         Gameplay starts when the Player spawns at the center of the game world, at which time Obstacles and Enemies will begin to spawn and move at random vectors. If destroyed by the Player's projectiles, each Obstacle and Enemy earns the Player a certain amount of points; smaller Obstacles and Enemies are worth more points than larger ones. If the Player collides with an Obstacle or Enemy, or is hit by an Enemy projectile, the Player is destroyed. When the Player is destroyed, if there are remaining Player lives, the Player loses a life and is respawned at the center of the game world; otherwise, the game ends.&#10;&#10;" />
                                            <Run Text="           At the end of the game, the Player's score is displayed and the user is prompted to enter a corresponding name for that game. After entering a name, any previous scores and names are displayed in order of largest to lowest score, and the user can choose to start a new round of gameplay. The high score, overlaid top-center above the game world, is displayed to inspire exceptional gameplay." />
                                                </TextBlock>
                                            </StackPanel>

                                        </StackPanel>
                                    </Border>
                                    <Border Style="{StaticResource MenuSectionContainer}"
                                            x:Name="configureSection"
                                            Margin="0,8,0,0"
                                            Padding="8">
                                        <StackPanel>
                                            <TextBlock Text="{StaticResource configure}"
                                                       Style="{StaticResource MenuSectionHeaderAdjustable}"
                                                       Margin="8,4" />
                                            <TextBlock Margin="4,8"
                                                       TextWrapping="Wrap">
                                            <Run Text="        Different aspects of the game can be customized in the" />
                                                <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource configureButtonStyle}">
                                                    <TextBlock />
                                                </Button>
                                            </InlineUIContainer><Run Text=" tab of the main menu." />
                                            <Run Text="&#10;&#10;         The" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="{Binding Source={StaticResource renderQualitySectionHeading}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="section allows the user to switch the render quality of Sprites between" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="Low" />
                                            <Run Text="(aliased edges) and" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="High" />
                                            <Run Text="(anti-aliased edges)." />
                                            <Run Text="&#10;&#10;         The" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="Controls" />
                                            <Run Text="section allows the user to switch between" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="{Binding Source={x:Static game:PlayerControlMode.Retro}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="and" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="{Binding Source={x:Static game:PlayerControlMode.WASD}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="control modes (see" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="{Binding Source={StaticResource howToPlayControls}, Mode=OneWay, StringFormat='{}2.{0}'}" />
                                            <Run Text=")." />
                                            <Run Text="Expanding the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource HelpSectionButtonStyle}">
                                                        <DockPanel>
                                                            <Border Width="Auto">
                                                                <TextBlock Text="🡇"
                                                                           Margin="2,0"
                                                                           FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13}" />
                                                            </Border>
                                                            <TextBlock Text="Show Controls"
                                                                       FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13, Converter={StaticResource fontSizeModifier}, ConverterParameter=-1.0}"
                                                                       Margin="4,0" />
                                                        </DockPanel>
                                                    </Button>
                                            </InlineUIContainer>
                                            <Run Text="section reveals the specific keyboard mappings." />
                                            <Run Text="&#10;&#10;         The" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="{Binding Source={StaticResource gameObjectsSectionHeading}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="section contains customization options for Sprites. The" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="{Binding Source={StaticResource symbolGroupSectionHeading}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="drop-down control displays the current and available groups of Symbols for applying as custom Sprite geometries. The" />
                                            <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                 Text="{Binding Source={StaticResource colorSchemeSectionHeading}, Mode=OneWay, StringFormat='{}{0}'}" />
                                            <Run Text="drop-down control displays the current and available color schemes for applying to Sprites and the game world. Both drop-downs have a corresponding randomizer button" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource HelpSectionButtonStyle}"
                                                        Padding="1,0,1,3">
                                                        <TextBlock Text="🎲"
                                                                   FontSize="{Binding HelpDocsFontSize, Mode=OneWay}"
                                                                   Style="{StaticResource buttonText}"
                                                                   ToolTip="Randomize Game Object Sprites"
                                                                   FontWeight="Normal" />
                                                    </Button>
                                            </InlineUIContainer>
                                            <Run Text="that will apply random values to all Sprites." />
                                            </TextBlock>
                                            <StackPanel x:Name="configureSpriteCustomizationSection">
                                                <TextBlock Text="{Binding Source={StaticResource configureSpriteCustomization}, Mode=OneWay, StringFormat='{}   {0}'}"
                                                           Style="{StaticResource MenuSectionHeaderAdjustable}"
                                                           Margin="0,16,0,4" />
                                                <TextBlock TextWrapping="Wrap"
                                                           Margin="4,8">
                                            <Run Text="         Expanding the " />
                                                <InlineUIContainer BaselineAlignment="Center">
                                                    <Button Style="{StaticResource HelpSectionButtonStyle}">
                                                        <DockPanel>
                                                            <Border Width="Auto">
                                                                <TextBlock Text="🡇"
                                                                           Margin="2,0"
                                                                           FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13}" />
                                                            </Border>
                                                            <TextBlock Text="{StaticResource showSpriteOptionsString}"
                                                                       FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13, Converter={StaticResource fontSizeModifier}, ConverterParameter=-1.0}"
                                                                       Margin="4,0" />
                                                        </DockPanel>
                                                    </Button>
                                                </InlineUIContainer>
                                                <Run Text="section reveals the geometry and color customization controls. Each Sprite has a color selector" />
                                                <InlineUIContainer BaselineAlignment="Center">
                                                    <Button Style="{StaticResource gameObjectFillButton}"
                                                            Height="Auto"
                                                            Margin="0,1,0,0"
                                                            IsHitTestVisible="False">
                                                        <Button.Background>
                                                            <LinearGradientBrush PresentationOptions:Freeze="True">
                                                                <GradientStop Color="Red" />
                                                                <GradientStop Color="Orange"
                                                                              Offset=".15" />
                                                                <GradientStop Color="Yellow"
                                                                              Offset=".30" />
                                                                <GradientStop Color="Green"
                                                                              Offset=".45" />
                                                                <GradientStop Color="Blue"
                                                                              Offset=".60" />
                                                                <GradientStop Color="Indigo"
                                                                              Offset=".75" />
                                                                <GradientStop Color="DarkViolet"
                                                                              Offset=".9" />
                                                            </LinearGradientBrush>
                                                        </Button.Background>
                                                        <TextBlock Text="◻"
                                                                   Foreground="Transparent"
                                                                   Margin="4,-2"
                                                                   Style="{StaticResource MenuSectionHeaderAdjustable}" />
                                                    </Button>
                                                </InlineUIContainer>
                                                <Run Text="and a geometry selector" />
                                                <InlineUIContainer BaselineAlignment="Center">
                                                    <Button Style="{StaticResource HelpSectionButtonStyle}"
                                                            Height="Auto">
                                                        <DockPanel LastChildFill="False">
                                                            <TextBlock Text="🎹"
                                                                       FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13, Converter={StaticResource fontSizeModifier}, ConverterParameter=-1.0}"
                                                                       Margin="4,0" />
                                                            <Border Width="Auto">
                                                                <TextBlock Text="🡇"
                                                                           Margin="4,0"
                                                                           FontWeight="Normal"
                                                                           FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13}" />
                                                            </Border>
                                                        
                                                        </DockPanel>
                                                    </Button>
                                                </InlineUIContainer>
                                                <Run Text=", while the Player and Projectile Sprites have additional Sprite rotation controls" />
                                                <InlineUIContainer BaselineAlignment="Center">
                                                    <UniformGrid Rows="1"
                                                                 Margin="0,1,0,0"
                                                                 IsHitTestVisible="False"
                                                                 Columns="2">
                                                                    <Button Style="{StaticResource HelpSectionButtonStyle}"
                                                                            CommandParameter="{x:Type game:Player}"
                                                                            Background="{StaticResource greenColorBrush}">
                                                                        <Button.Tag>
                                                                            <CornerRadius>4,0,0,4</CornerRadius>
                                                                        </Button.Tag>
                                                                        <TextBlock Text="+45°"
                                                                                   FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13}" />
                                                                    </Button>
                                                                    <Button Style="{StaticResource HelpSectionButtonStyle}"
                                                                            CommandParameter="{x:Type game:Player}"
                                                                            Background="{StaticResource redColorBrush}">
                                                                        <Button.Tag>
                                                                            <CornerRadius>0,4,4,0</CornerRadius>
                                                                        </Button.Tag>
                                                                        <TextBlock Text="−45°"
                                                                                   FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13}" />
                                                                    </Button>
                                                                </UniformGrid>
                                                </InlineUIContainer>
                                                <Run Text=". Activating the color selector displays a Popup with preset and custom colors to choose from. Activating the geometry selector displays a list of the available symbols able to be selected from the current symbol group. Activating the Sprite rotation buttons rotates the corresponding Sprite geometry in 45° increments." />
                                                <Run Text="&#10;&#10;           The" />
                                                <Run Style="{StaticResource SettingLabelRunAdjustable}"
                                                     Text="{Binding Source={StaticResource gameWorldSettingsString}, Mode=OneWay, StringFormat='{}{0}'}" />
                                                <Run Text="section contains two color selectors for selecting the background and text color of the game world, and two additional buttons for controlling the colors of all Sprites." />
                                                <InlineUIContainer BaselineAlignment="Center">
                                                    <Button Style="{StaticResource HelpSectionButtonStyle}">
                                                        <TextBlock Text="{Binding Source={StaticResource applyToAllGameWorldButtonString}, Mode=OneWay, StringFormat='{}{0}'}" />
                                                    </Button>
                                                </InlineUIContainer>
                                                <Run Text="applies the current game world text color to all Sprites. " />
                                                <InlineUIContainer BaselineAlignment="Center">
                                                    <Button Style="{StaticResource HelpSectionButtonStyle}"
                                                            Background="{StaticResource redColorBrush}">
                                                        <TextBlock Text="{Binding Source={StaticResource resetAllGameWorldButtonString}, Mode=OneWay, StringFormat='{}{0}'}" />
                                                    </Button>
                                                </InlineUIContainer>
                                                <Run Text="resets all Sprite colors and custom color selections to default. " />
                                            </TextBlock>
                                            </StackPanel>
                                        </StackPanel>

                                    </Border>
                                    <Border Style="{StaticResource MenuSectionContainer}"
                                            Margin="0,8,0,0"
                                            Padding="8"
                                            x:Name="presetsSection">
                                        <StackPanel>
                                            <TextBlock Text="{StaticResource presets}"
                                                       Style="{StaticResource MenuSectionHeaderAdjustable}"
                                                       Margin="8,4" />
                                            <TextBlock Margin="4,8"
                                                       TextWrapping="Wrap">
                                                <Run Text="Activating the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource HelpSectionButtonStyle}">
                                                    <TextBlock Text="{StaticResource addConfigurationToPresetsString}"
                                                               TextWrapping="Wrap" />
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="button," />
                                                                                            <Run Text="located at the bottom of the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource configureButtonStyle}">
                                                    <TextBlock />
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="tab of the main menu," />
                                                <Run Text=" displays a prompt allowing the current configuration options to be saved as a preset. After naming and saving a preset, it will appear in the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource configureButtonStyle}">
                                                    <TextBlock Text="{StaticResource presetsMenuHeading}" />
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="tab of the main menu under the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource configureButtonStyle}">
                                                    <TextBlock Text="{StaticResource customPresetsMenuHeading}" />
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="sub-tab. Multiple presets can be saved to this area and are able to be individually loaded via the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource HelpSectionButtonStyle}"
                                                        Background="{StaticResource greenColorBrush}">
                                                    <TextBlock Text="{StaticResource loadPresetString}" />
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="button or deleted via the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource HelpSectionButtonStyle}"
                                                        Background="{StaticResource redColorBrush}">
                                                    <TextBlock Text="{StaticResource deletePresetString}" />
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="button. Presets are able to be imported from and exported to the local file system by activating the" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource HelpSectionButtonStyle}">
                                                    <DockPanel>
                                                        <Border Width="Auto">
                                                            <TextBlock Text="📥︎"
                                                                       FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13}" />
                                                        </Border>
                                                        <TextBlock Text="{StaticResource importPresetString}"
                                                                   FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13, Converter={StaticResource fontSizeModifier}, ConverterParameter=-1.0}"
                                                                   Margin="4,1" />
                                                    </DockPanel>
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="and" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource HelpSectionButtonStyle}">
                                                    <DockPanel>
                                                        <Border Width="Auto">
                                                            <TextBlock Text="📤︎"
                                                                       FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13}" />
                                                        </Border>
                                                        <TextBlock Text="{StaticResource exportPresetString}"
                                                                   FontSize="{Binding HelpDocsFontSize, Mode=OneWay, FallbackValue=13, Converter={StaticResource fontSizeModifier}, ConverterParameter=-1.0}"
                                                                   Margin="4,1" />
                                                    </DockPanel>
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="buttons, respectively. The" />
                                            <InlineUIContainer BaselineAlignment="Center">
                                                <Button Style="{StaticResource configureButtonStyle}">
                                                    <TextBlock Text="{StaticResource builtInPresetsMenuHeading}" />
                                                </Button>
                                            </InlineUIContainer>
                                            <Run Text="sub-tab contains several pre-defined presets to browse and load." />
                                            </TextBlock>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                            </ScrollViewer>
                            <Button Grid.Row="2"
                                    Style="{StaticResource ButtonStyle1}"
                                    Margin="8,0,8,8"
                                    Command="{Binding BringElementIntoView}"
                                    CommandParameter="{Binding ElementName=helpContentsSection, Mode=OneWay}">
                                <TextBlock Text="Scroll to Top" />
                            </Button>
                        </Grid>
                    </TabItem>
                </TabControl>
            </Grid>
        </Border>
    </Grid>
</Window>
